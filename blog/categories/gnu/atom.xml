<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GNU | Freelance Projects]]></title>
  <link href="http://uw-freelancer.github.io/blog/categories/gnu/atom.xml" rel="self"/>
  <link href="http://uw-freelancer.github.io/"/>
  <updated>2013-07-17T23:26:39+05:30</updated>
  <id>http://uw-freelancer.github.io/</id>
  <author>
    <name><![CDATA[Upeksha Wisidagama]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim Vedug]]></title>
    <link href="http://uw-freelancer.github.io/blog/vim-vdebug/"/>
    <updated>2013-07-06T15:13:00+05:30</updated>
    <id>http://uw-freelancer.github.io/blog/vim-vdebug</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been using various debuggers for Vim. But when tried Vdeug, I realized Vdebug has almost all the possible features for a Vim Debugger.</p>

<p><img class='center' src="/images/blog/vim/vdebug-help.jpg" title="Vdebug Help" alt="Vdebug Help" /></p>

<p>Vdebug, technically, said to support languages that have a debugging engine that uses the DBGP protocol. This plugin has been designed with four languages in mind, PHP, Python, Ruby and Perl.</p>

<p><blockquote><p>Vdebug: A powerful, fast, multi-language debugger for Vim</p></blockquote></p>

<h3>Vim Vdebug Debugger Stack</h3>


<p><img class='center' src="/images/blog/vim/vdebug-debuggerstack.jpg" title="Vdebug Debugger Stack" alt="Vdebug Debugger Stack" /></p>

<h3>Vim Vdebug Debugger Watch</h3>


<p><img class='center' src="/images/blog/vim/vdebug-debuggerwatch.jpg" title="Vdebug Debugger Watch" alt="Vdebug Debugger Watch" /></p>

<h3>Vim Vdebug Debugger Status</h3>


<p><img class='center' src="/images/blog/vim/vdebug-debuggerstatus.jpg" title="Vdebug Debugger Status" alt="Vdebug Debugger Status" /></p>

<h2>Installing Vdebug Plugin</h2>


<p>Clone the Vdebug Github repository in your local bundle.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Installing Vdebug&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.vim/bundle
</span><span class='line'>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/joonty/vdebug.git&quot;</span>&gt;https://github.com/joonty/vdebug.git&lt;/a&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>PHP5-Xdebug Configuration</h2>


<p>You also need to install Xdebug PHP extension using <code>sudo apt-get install php5-xdebug</code>.</p>

<p>Now configure xdebug initialization.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Xdebug Initialization (/etc/php5/apache2/conf.d/xdebug.ini)&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">zend_extension</span><span class="o">=</span>/usr/lib/php5/20090626+lfs/xdebug.so&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;xdebug.remote_enable<span class="o">=</span>1
</span><span class='line'>xdebug.remote_handler<span class="o">=</span>dbgp
</span><span class='line'>xdebug.remote_mode<span class="o">=</span>req
</span><span class='line'>xdebug.remote_host<span class="o">=</span>127.0.0.1
</span><span class='line'>xdebug.remote_port<span class="o">=</span>9000&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;xdebug.profiler_enable_trigger<span class="o">=</span>1
</span><span class='line'>xdebug.profiler_output_dir<span class="o">=</span>/media/www/xdebugdata
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Xdebug Helper Google Chrome Extension</h2>


<p>Installl Xdebug Helper Chrome extension to easily start a debugging session via browser.</p>

<p><a href="https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc">https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc</a></p>

<p><img class='center' src="/images/blog/vim/xdebug-helper.png" title="Xdebug Helper" alt="Xdebug Helper" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Insanely Faster Buffer Switching]]></title>
    <link href="http://uw-freelancer.github.io/blog/insanely-faster-vim-buffer-switching/"/>
    <updated>2013-07-03T23:05:00+05:30</updated>
    <id>http://uw-freelancer.github.io/blog/insanely-faster-vim-buffer-switching</id>
    <content type="html"><![CDATA[<p>Consider the following instance. You are debugging an app with Vim Vdebug. You have opened several other text buffers as well. Also note that we&rsquo;ve a couple of tabs as well.</p>

<p><img class='center' src="/images/blog/insanely-faster-buffer-switching.png" title="Insanely Faster Buffer Switching in Vim" alt="Insanely Faster Buffer Switching in Vim" /></p>

<p><a href="/images/blog/insanely-faster-buffer-switching.png" target="blank" >Larger Preview</a></p>

<h2>{ s-h | s-j | s-k | s-l }</h2>


<p>Still using &lt;C-W> commands to switch buffers? It&rsquo;s probably time to practise a more efficient way.</p>

<p><blockquote><p>I&rsquo;ve put some text on my .vimrc which allows me to switch buffers 537ns before I think about switching buffers.<br/>* ns = nano seconds = 1x10<sup>-9</sup>s</p></blockquote></p>

<p>I strongly encourage you to put these in your .vimrc and experience <b>The Ultimate Speed of Buffer Switching</b>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Insanely Faster Buffer Switching &ndash; .vimrc&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>nmap sh &amp;lt;C-W&gt;h
</span><span class='line'>nmap sj &amp;lt;C-W&gt;j
</span><span class='line'>nmap sk &amp;lt;C-W&gt;k
</span><span class='line'>nmap sl &amp;lt;C-W&gt;l
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Lightning Speed Tab Switching</h2>


<p>I recommend the following settings for a faster and more intuitive tab swiching experience.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Lightning Fast Tab Switching &ndash; .vimrc&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>nnoremap sn :tabp&lt;cr&gt;
</span><span class='line'>nnoremap sm :tabn&lt;cr&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Exercise</h2>


<p>Don&rsquo;t look at the keyboard!
Can you find the &rsquo;s' key without looking at the keyboard?</p>

<p>Yes: Share this post.<br />
No: Like this post.<br />
I looked at the keybord: Do nothing.<br /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building the System Software From Scratch]]></title>
    <link href="http://uw-freelancer.github.io/blog/building-the-system-software-from-scratch/"/>
    <updated>2013-07-01T17:00:00+05:30</updated>
    <id>http://uw-freelancer.github.io/blog/building-the-system-software-from-scratch</id>
    <content type="html"><![CDATA[<p>Various file systems exported by the kernel are used to communicate to and from the kernel itself. These file systems are virtual in that no disk space is used for them. The content of the file systems resides in memory. Begin by creating directories onto which the file systems will be mounted.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Virtual Kernel FileSystems&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -v <span class="nv">$LFS</span>/<span class="o">{</span>dev,proc,sys<span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;mount -vt devpts devpts <span class="nv">$LFS</span>/dev/pts
</span><span class='line'>mount -vt proc proc <span class="nv">$LFS</span>/proc
</span><span class='line'>mount -vt sysfs sysfs <span class="nv">$LFS</span>/sys
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Dev File System</h3>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Virtual Kernel FileSystems&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mknod -m 600 <span class="nv">$LFS</span>/dev/console c 5 1
</span><span class='line'>mknod -m 666 <span class="nv">$LFS</span>/dev/null c 1 3&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;mount -v &amp;mdash;bind /dev <span class="nv">$LFS</span>/dev
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Chroot into the System</h2>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Chrooting to the System&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chroot &amp;ldquo;<span class="nv">$LFS</span>&amp;rdquo; /tools/bin/env -i <span class="se">\&lt;</span>/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;HOME<span class="o">=</span>/root <span class="se">\</span>
</span><span class='line'><span class="nv">TERM</span><span class="o">=</span><span class="s2">&quot;$TERM&quot;</span> <span class="se">\</span>
</span><span class='line'><span class="nv">PS1</span><span class="o">=</span><span class="s1">&#39;\u:\w\$ &#39;</span> <span class="se">\</span>
</span><span class='line'><span class="nv">PATH</span><span class="o">=</span>/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin <span class="se">\</span>
</span><span class='line'>/tools/bin/bash --login +h
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>-i</code> option will clear all environment variables of the chroot environment. Then &lsquo;HOME&rsquo;, &lsquo;TERM&rsquo;, &lsquo;PS1&rsquo; and &lsquo;PATH&rsquo; variables are set again.</p>

<p><blockquote><p>Notice that &lsquo;/tools/bin&rsquo; comes last in the PATH. This means that a temporary tool will no longer be used once its final version is installed. This occurs when the shell does not “remember” the locations of executed binaries—for this reason, hashing is switched off by passing the &lsquo;+h&rsquo; option to bash.</p></blockquote></p>

<h2>Install the System Software from Source</h2>


<p>The following list of programs needs to be installed.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;System Software List&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Linux-3.8.1 API Headers
</span><span class='line'>Man-pages-3.47
</span><span class='line'>Glibc-2.17
</span><span class='line'>Zlib-1.2.7
</span><span class='line'>File-5.13
</span><span class='line'>Binutils-2.23.1
</span><span class='line'>GMP-5.1.1
</span><span class='line'>MPFR-3.1.1
</span><span class='line'>MPC-1.0.1
</span><span class='line'>GCC-4.7.2
</span><span class='line'>Sed-4.2.2
</span><span class='line'>Bzip2-1.0.6
</span><span class='line'>Pkg-config-0.28
</span><span class='line'>Ncurses-5.9
</span><span class='line'>Util-linux-2.22.2
</span><span class='line'>Psmisc-22.20
</span><span class='line'>Procps-ng-3.3.6
</span><span class='line'>E2fsprogs-1.42.7
</span><span class='line'>Shadow-4.1.5.1
</span><span class='line'>Coreutils-8.21
</span><span class='line'>Iana-Etc-2.30
</span><span class='line'>M4-1.4.16
</span><span class='line'>Bison-2.7
</span><span class='line'>Grep-2.14
</span><span class='line'>Readline-6.2
</span><span class='line'>Bash-4.2
</span><span class='line'>Libtool-2.4.2
</span><span class='line'>GDBM-1.10
</span><span class='line'>Inetutils-1.9.1
</span><span class='line'>Perl-5.16.2
</span><span class='line'>Autoconf-2.69
</span><span class='line'>Automake-1.13.1
</span><span class='line'>Diffutils-3.2
</span><span class='line'>Gawk-4.0.2
</span><span class='line'>Findutils-4.4.2
</span><span class='line'>Flex-2.5.37
</span><span class='line'>Gettext-0.18.2
</span><span class='line'>Groff-1.22.2
</span><span class='line'>Xz-5.0.4
</span><span class='line'>GRUB-2.00
</span><span class='line'>Less-451
</span><span class='line'>Gzip-1.5
</span><span class='line'>IPRoute2-3.8.0
</span><span class='line'>Kbd-1.15.5
</span><span class='line'>Kmod-12
</span><span class='line'>Libpipeline-1.2.2
</span><span class='line'>Make-3.82
</span><span class='line'>Man-DB-2.6.3
</span><span class='line'>Patch-2.7.1
</span><span class='line'>Sysklogd-1.5
</span><span class='line'>Sysvinit-2.88dsf
</span><span class='line'>Tar-1.26
</span><span class='line'>Texinfo-5.0
</span><span class='line'>Udev-197
</span><span class='line'>Vim-7.3
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now we have all System Software installed. Next we should compile the kernel. See <a href="/blog/compiling-the-linux-kernel-from-source/" >Compiling a Linux Kernel From Source</a> post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim PowerLine]]></title>
    <link href="http://uw-freelancer.github.io/blog/vim-powerline/"/>
    <updated>2013-07-01T15:05:00+05:30</updated>
    <id>http://uw-freelancer.github.io/blog/vim-powerline</id>
    <content type="html"><![CDATA[<p>Vim is the editor I use for my day to day text editing tasks.</p>

<h2>Powerline Mode Indicator</h2>


<p>Vim Powerline plugin can show the &lsquo;mode information&rsquo; on the powerline.</p>

<p>Normal Mode</p>

<p><img class='center' src="/images/blog/vim/powerline-normal.png" title="Vim Powerline Normal" alt="Vim Powerline Normal" /></p>

<p>Insert Mode</p>

<p><img class='center' src="/images/blog/vim/powerline-insert.png" title="Vim Powerline Insert" alt="Vim Powerline Insert" /></p>

<p>Visual Line Mode</p>

<p><img class='center' src="/images/blog/vim/powerline-vline.png" title="Vim Powerline Visual Line" alt="Vim Powerline Visual Line" /></p>

<p>Visual Block Mode</p>

<p><img class='center' src="/images/blog/vim/powerline-vbox.png" title="Vim Powerline Visual Block" alt="Vim Powerline Visual Block" /></p>

<h2>Powerline Git Branch Indicator</h2>


<p>The above screens show we are working on the &lsquo;Master&rsquo; branch. Let&rsquo;s create and new branch called &lsquo;Upeksha&rsquo; and checkout it.</p>

<p><img class='center' src="/images/blog/vim/powerline-git-branch.png" title="Powerline Create Branch" alt="Powerline Create Branch" /></p>

<p>Now the Git Branch Indicator shows the &lsquo;Upeksha&rsquo; branch.</p>

<p><img class='center' src="/images/blog/vim/powerline-upeksha-branch.png" title="Powerline Upeksha Branch" alt="Powerline Upeksha Branch" /></p>

<h2>How to install Powerline</h2>


<p>1 &ndash; First, Install the Powerline plugin.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Installing Powerline Plugin&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.vim/bundle
</span><span class='line'>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/Lokaltog/vim-powerline.git&quot;</span>&gt;https://github.com/Lokaltog/vim-powerline.git&lt;/a&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>2 &ndash; Next, install the Powerline fonts.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Installing Powerline Fonts&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/.fonts
</span><span class='line'><span class="nb">cd</span> ~/.fonts/
</span><span class='line'>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/scotu/ubuntu-mono-powerline.git&quot;</span>&gt;https://github.com/scotu/ubuntu-mono-powerline.git&lt;/a&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>3 &ndash; Finally, configure your Vim instance.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Powerline Vim Configuration &ndash; .vimrc&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&amp;ldquo; Vim Powerline
</span><span class='line'><span class="nb">let </span>g:Powerline_symbols <span class="o">=</span> &amp;lsquo;fancy&amp;rsquo;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&amp;ldquo; Automatically delete buffers when browsing git <span class="nb">history</span>/objects.
</span><span class='line'>au BufReadPost fugitive://* <span class="nb">set </span><span class="nv">bufhidden</span><span class="o">=</span>delete&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&amp;ldquo; Optional Setting
</span><span class='line'><span class="nb">set </span><span class="nv">t_Co</span><span class="o">=</span>256
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
