<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | Freelance Projects]]></title>
  <link href="http://uw-freelancer.github.io/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://uw-freelancer.github.io/"/>
  <updated>2013-07-08T12:32:39+05:30</updated>
  <id>http://uw-freelancer.github.io/</id>
  <author>
    <name><![CDATA[Upeksha Wisidagama]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Apache2 FastCGI and suEXEC implementing APC per user with PHP5-CGI]]></title>
    <link href="http://uw-freelancer.github.io/blog/fastcgi-suexec-apc-per-user/"/>
    <updated>2013-06-13T22:00:00+05:30</updated>
    <id>http://uw-freelancer.github.io/blog/fastcgi-suexec-apc-per-user</id>
    <content type="html"><![CDATA[<p>Each user can be given their own Alternative PHP Cache (APC) with PHP running as a seperate process. First we need to disable Apache2 PHP module which is enabled by default. After doing this you no longer can set PHP settings in .htaccess files. Apache2 will have no knowledge about PHP, it only passes the execution to a seperate PHP process via FastCGI module.</p>

<p><a href="/blog/setup-local-ubuntu-server/" >Setting up a local Ubuntu Server</a> is recommended to read before this post to learn how to setup a local Ubuntu Server.</p>

<h2>Disable Apache2 PHP5 Module and Install PHP CGIs</h2>


<p>Note the highlighted Resident and Shared memory consumption by Apache2 parent process and its children.</p>

<p><img class='center' src="/images/server/apache2-prefork-with-mod_php5.png" title="Apache2 Prefork with Mod_PHP" alt="Apache2 Prefork with Mod_PHP" /></p>

<p>Disable <code>mod_php</code> with <code>sudo a2dismod php5</code>. Restart web server with <code>sudo service apache2 restart</code>. Now, if you check your &lsquo;/etc/apache2/mods-enabled&rsquo; directory, you will notice that <code>php.conf</code> and <code>php5.load</code> files have been deleted.</p>

<p><img class='center' src="/images/server/apache2-prefork-without-mod_php5.png" title="Apache2 Prefork without Mod_PHP" alt="Apache2 Prefork without Mod_PHP" /></p>

<p>Again, note the reduction of the memory consumption by Apache.</p>

<p>Next, you need to install <code>php5-cgi</code>. Run <code>sudo apt-get install php5-cgi</code>. After installation you will have two new executables (<code>php-cgi</code> and <code>php5-cgi</code>) in <code>/usr/bin/</code> directory.</p>

<h2>Install and Enable Apache2 FastCGI Module</h2>


<p>Run <code>sudo apt-cache search apache2 cgi</code> and find the relevant module. Install using <code>sudo apt-get install libapache2-mod-fastcgi</code>. Restart the server once again. If you check <code>/etc/apache2/mods-enabled</code> directory, you will see FastCGI is enabled automatically after installation.</p>

<p>Add the FastCGI configuration to the <code>apache2.conf</code> file in <code>/etc/apache2</code> directory.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;FastCGI Configuration (/etc/apache2/apache2.conf)&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;FastCGI&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;IfModule mod_fastcgi.c&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;FastCgiConfig -idle-timeout 20 -maxClassProcesses 1
</span><span class='line'>FastCgiWrapper on&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;AddHandler php5-fcgi .php
</span><span class='line'>Action php5-fcgi /cgi-bin/php-fastcgi&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;Location <span class="s2">&quot;/cgi-bin/php-fastcgi&quot;</span>&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;Order Deny,Allow
</span><span class='line'>Deny from All
</span><span class='line'>Allow from <span class="nv">env</span><span class="o">=</span>REDIRECT_STATUS
</span><span class='line'>Options ExecCGI
</span><span class='line'>SetHandler fastcgi-script
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;/Location&gt;
</span><span class='line'>&lt;/IfModule&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>You might need to enable Action command via <code>sudo a2enmod actions</code> to parse the above configuration.</p>

<h2>Install and Enable Apache2 suEXEC</h2>


<p><code>sudo apt-get install apache2-suexec</code></p>

<p>Enable &lsquo;suEXEC&rsquo; with <code>sudo a2enmod suexec</code>.</p>

<p>Create PHP FastCGI wrapper scripts in <code>/var/www/bin/</code> directory. Create a new directory for &lsquo;wisidagama&rsquo;. Create the &lsquo;php-fastcgi&rsquo; wrapper script.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Fast CGI PHP Wrapper (/var/www/bin/wisidagama/php-fastcgi)&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/sh&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;PHP_FCGI_CHILDREN<span class="o">=</span>2
</span><span class='line'><span class="nb">export </span>PHP_FCGI_CHILDREN
</span><span class='line'><span class="nv">PHP_FCGI_MAX_REQUESTS</span><span class="o">=</span>500
</span><span class='line'><span class="nb">export </span>PHP_FCGI_MAX_REQUESTS&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;umask 0022
</span><span class='line'><span class="nb">exec</span> /usr/bin/php5-cgi -d apc.shm_size<span class="o">=</span>50M
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Be sure to read and understand the <a href="http://httpd.apache.org/docs/2.2/suexec.html#model" >suEXEC Security Model</a> too.</p>

<h2>Install and Enable PHP APC</h2>


<p><code>sudo apt-get install php-apc</code></p>

<p>You should get an <code>apc.ini</code> file in <code>/etc/php5/cgi/conf.d</code> directory. Enter <code>apc.enabled="1"</code> to enable APC for CGI PHP.</p>

<h2>Add a User and Create a simple website</h2>


<p>Add a new user called &lsquo;wisidagama&rsquo;. <code>sudo useradd wisidagama</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Creating a New User&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>upeksha@uwlab:/home<span class="nv">$ </span>sudo useradd -d /home/wisidagama -m wisidagama
</span><span class='line'>upeksha@uwlab:/home<span class="nv">$ </span>sudo passwd wisidagama
</span><span class='line'>Enter new UNIX password:
</span><span class='line'>Retype new UNIX password:
</span><span class='line'>passwd: password updated successfully
</span><span class='line'>upeksha@uwlab:/home<span class="nv">$ </span>ls
</span><span class='line'>upeksha  wisidagama
</span><span class='line'>upeksha@uwlab:/home<span class="nv">$ </span>ls -al
</span><span class='line'>total 16
</span><span class='line'>drwxr-xr-x  4 root       root       4096 Jul  8 00:34 .
</span><span class='line'>drwxr-xr-x 22 root       root       4096 Jul  7 10:52 ..
</span><span class='line'>drwxr-xr-x  4 upeksha    upeksha    4096 Jul  7 23:41 upeksha
</span><span class='line'>drwxr-xr-x  2 wisidagama wisidagama 4096 Jul  8 00:34 wisidagama
</span><span class='line'>upeksha@uwlab:/home<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Let&rsquo;s create a simple two-page website for wisidagama.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Creating a Simple Site&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>upeksha@uw:~/test<span class="nv">$ </span>ssh wisidagama@uwlab
</span><span class='line'>wisidagama@uwlab&amp;rsquo;s password:
</span><span class='line'>Welcome to Ubuntu 12.04.2 LTS <span class="o">(</span>GNU/Linux 3.5.0-23-generic i686<span class="o">)</span>
</span><span class='line'>&amp;hellip;
</span><span class='line'><span class="nv">$ </span>ls -al
</span><span class='line'>total 28
</span><span class='line'>drwxr-xr-x 3 wisidagama wisidagama 4096 Jul  8 00:45 .
</span><span class='line'>drwxr-xr-x 4 root       root       4096 Jul  8 00:34 ..
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash; 1 wisidagama wisidagama  220 Apr  3  2012 .bash_logout
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash; 1 wisidagama wisidagama 3486 Apr  3  2012 .bashrc
</span><span class='line'>drwx&amp;mdash;&amp;mdash;&amp;mdash; 2 wisidagama wisidagama 4096 Jul  8 00:45 .cache
</span><span class='line'>-rw-r&amp;mdash;r&amp;mdash; 1 wisidagama wisidagama  675 Apr  3  2012 .profile
</span><span class='line'>-rw&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 1 wisidagama wisidagama  594 Jul  8 00:44 .viminfo
</span><span class='line'><span class="nv">$ </span>mkdir public_html
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>public_html
</span><span class='line'><span class="nv">$ </span>vi phpinfo.php
</span><span class='line'><span class="nv">$ </span>vi index.php
</span><span class='line'><span class="nv">$ </span>ls -al
</span><span class='line'>total 16
</span><span class='line'>drwxrwxr-x 2 wisidagama wisidagama 4096 Jul  8 00:47 .
</span><span class='line'>drwxr-xr-x 4 wisidagama wisidagama 4096 Jul  8 00:47 ..
</span><span class='line'>-rw-rw-r&amp;mdash; 1 wisidagama wisidagama   29 Jul  8 00:47 index.php
</span><span class='line'>-rw-rw-r&amp;mdash; 1 wisidagama wisidagama   20 Jul  8 00:47 phpinfo.php
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Next we need serve these files as www.wisidagama.dev. Setup a Virtual Host for wisidagama.dev.</p>

<p>Copy the &lsquo;default&rsquo; file to &lsquo;wisidagama.dev&rsquo; in &lsquo;/etc/apache2/sites-available&rsquo; directory. Edit the file as follows.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;wisidagama.dev&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;VirtualHost *:80&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;ServerName www.wisidagama.dev
</span><span class='line'>ServerAdmin webmaster@wisidagama.dev
</span><span class='line'>
</span><span class='line'>DocumentRoot /home/wisidagama/public_html/
</span><span class='line'>&amp;lt;Directory /home/wisidagama/public_html/&amp;gt;
</span><span class='line'>    Options Indexes FollowSymLinks MultiViews
</span><span class='line'>    AllowOverride None
</span><span class='line'>    Order allow,deny
</span><span class='line'>    allow from all
</span><span class='line'>&amp;lt;/Directory&amp;gt;
</span><span class='line'>
</span><span class='line'>&amp;lt;IfModule mod_fastcgi.c&amp;gt;
</span><span class='line'>    SuexecUserGroup wisidagama wisidagama
</span><span class='line'>    Alias /cgi-bin/ /var/www/bin/wisidagama/
</span><span class='line'>&amp;lt;/IfModule&amp;gt;
</span><span class='line'>
</span><span class='line'>ErrorLog /home/wisidagama/error.log
</span><span class='line'>
</span><span class='line'><span class="c"># Possible values include: debug, info, notice, warn, error, crit,</span>
</span><span class='line'><span class="c"># alert, emerg.</span>
</span><span class='line'>LogLevel warn
</span><span class='line'>
</span><span class='line'>CustomLog /home/wisidagama/access.log combined
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;/VirtualHost&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Enable <code>wisidagama.dev</code> using <code>sudo a2ensite wisidagama.dev</code>.</p>

<p>From the client machine we need to tell www.wisidagama.dev to resolve to 192.168.1.8 since we don&rsquo;t have a DNS server to resolve this. Add the following line to your <code>/etc/hosts</code> file.</p>

<p><code>192.168.1.8   www.wisidagama.dev</code></p>

<h2>Disabling FastCGI or suEXEC</h2>


<p>If you disable FastCGI module using <code>sudo a2dismod fastcgi</code>, then no one will handle .php files (Remember: AddHandler php5-fcgi .php). They will be downloaded to client machines.</p>

<p>If you disable suExec module using <code>sudo a2dismod suexec</code>, Apache will fail.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Apache2 Fails to Start (/var/log/apache2/error.log)&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>upeksha@uwlab:~<span class="nv">$ </span>sudo service apache2 restart
</span><span class='line'>Syntax error on line 14 of /etc/apache2/sites-enabled/wisidagama.dev:
</span><span class='line'>Invalid <span class="nb">command</span> &amp;lsquo;SuexecUserGroup&amp;rsquo;, perhaps misspelled or defined by a module not included in the server configuration
</span><span class='line'>Action &amp;lsquo;configtest&amp;rsquo; failed.
</span><span class='line'>The Apache error log may have more information.
</span><span class='line'>   &amp;hellip;fail!
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Configuring APC size Per User</h2>


<p>You can fine tune per user APC size in &lsquo;/var/www/bin/USER/php-fastcgi scripts. Use the <code>-d apc.shm_size=100M</code> argument to adjust per user APC size. See below, <code>phpinfo()</code> output shows the custom APC size for 'wisidagama&rsquo;.</p>

<p><img class='center' src="/images/server/cgi-fastcgi-as-php-server-api.png" title="CGI-FastCGI as PHP Sever API" alt="CGI-FastCGI as PHP Sever API" /></p>

<p>APC configuration:</p>

<p><img class='center' src="/images/server/php-fastcgi-apc-enabled.png" title="PHP FastCGI APC Enabled" alt="PHP FastCGI APC Enabled" /></p>

<p>APC size per user:</p>

<p><img class='center' src="/images/server/php-apc-shm-size.png" title="PHP APC SHM Size" alt="PHP APC SHM Size" /></p>

<h2>Resource Consumption of PHP CGI running via FastCGI and usEXEC with per user APC</h2>


<p><img class='center' src="/images/server/php5-cgi-process-resource-consumption.png" title="PHP CGI Process Resource Consumption" alt="PHP CGI Process Resource Consumption" /></p>

<p>Now you can fine tune the various parameters to match your server needs and wants. Note: Apache2 still uses Prefork MPM.</p>

<p><img class='center' src="/images/server/php-as-cgi-process-with-apache-prefork-mpm.png" title="PHP as CGI process with Apache2 Prefork MPM" alt="PHP as CGI process with Apache2 Prefork MPM" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up a Local Ubuntu Server]]></title>
    <link href="http://uw-freelancer.github.io/blog/setup-local-ubuntu-server/"/>
    <updated>2012-02-02T22:00:00+05:30</updated>
    <id>http://uw-freelancer.github.io/blog/setup-local-ubuntu-server</id>
    <content type="html"><![CDATA[<p>Let&rsquo;s setup an Ubuntu Server. Download the server image from ubuntu website and burn it into a CD or DVD. Install it on your machine. You will be asked about basic configuration options. Choose defaults. Important: Select &lsquo;OpenSSH&rsquo; and &lsquo;LAMP&rsquo; in the server selection dialog.</p>

<p><img class='center' src="/images/server/ubuntu-server-login.jpg" title="Ubuntu Server Login" alt="Ubuntu Server Login" /></p>

<p>Note the ip address of eth0. Next we plug in anther network card and setup an IP address for the new interface (probably be named as eth1).</p>

<h2>Setting up the IP address</h2>


<p>Shutdown the computer and plug in the new network card and boot the computer. Run <code>ifconfig</code> command. The new interface will not show up. You may guess the new ethernet interface. E.g. If you have eth0 listed, the new one wll be eth1. You can run &lsquo;ifconig -a&rsquo; and see yourself and verify.</p>

<p><blockquote><p>If a single  -a  argument  is  given,  it  displays the status of all interfaces, even those that are down.</p></blockquote></p>

<p>Another way is to run &lsquo;ifconfig eth1&rsquo; directly, assuming the new interface is eth1.</p>

<p><img class='center' src="/images/server/where-is-eth1-interface.jpg" title="Where is eth1 interface" alt="Where is eth1 interface" /></p>

<p>Now, you are certain that the new network interface is &lsquo;eth1&rsquo;. Let&rsquo;s assign a new static IP to this interface. We&rsquo;ll be SSHing into this server through the new interface soon.</p>

<p>Open &lsquo;/etc/network/interfaces&rsquo; and assign <code>192.168.1.8</code> for <code>eth1</code>. We are adding our new machine to the &lsquo;UW Network&rsquo; (192.168.1.0).</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Static IP Assignment for eth1 (/etc/network/interfaces)&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;The UW network interface&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;auto eth1
</span><span class='line'>iface eth1 inet static
</span><span class='line'>address 192.168.1.8
</span><span class='line'>netmask 255.255.255.0
</span><span class='line'>network 192.168.1.0
</span><span class='line'>broadcast 192.168.1.255
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Restart the server to apply ip addresses.</p>

<p><img class='center' src="/images/server/new-network-interface-configured.jpg" title="New Network Interface Configured" alt="New Network Interface Configured" /></p>

<h2>Remote Login to the Server and Set up the HostName</h2>


<p>Are you getting the &lsquo;apache2: Could not reliably determine the server&rsquo;s fully qualified domain name, using 127.0.1.1 for ServerName&rsquo; message every time you start, stop or restart the server?</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;apache2 warning&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>upeksha@uwlab:~<span class="nv">$ </span>sudo service apache2 start
</span><span class='line'><span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for </span>upeksha:
</span><span class='line'> * Starting web server apache2
</span><span class='line'> apache2: Could not reliably determine the server&amp;rsquo;s fully qualified domain name, using 127.0.1.1 <span class="k">for </span>ServerName
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To fix the warning, login to the remote server by SSHing to 192.168.1.8.</p>

<p><img class='center' src="/images/server/remote-login-to-server-change-servername.jpg" title="Change Server Name" alt="Change Server Name" /></p>

<p>To specify a server name for our new server, open &lsquo;/etc/apache2/apache2.conf&rsquo; and enter <code>ServerName uwlab</code> at the bottom.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Server name assignment (/etc/apache2/apache2.conf)&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ServerName uwlab
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Restart the server again using <code>sudo service apache2 restart</code>. Now, there is no warning.</p>

<h2>Using a Name instead of IP for SSH</h2>


<p>In the previous section we sshed into the remote server using <code>ssh 192.168.1.8</code>. We can also configure our machine to use a name instead an ip address. Open &lsquo;/etc/hosts&rsquo; and enter the following.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;SSH hostname (/etc/hosts)&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>192.168.1.8     uwlab
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now you can simply use <code>ssh uwlab</code> to SSH into the new server.</p>

<h2>Auto Login to the Remote Server with SSH</h2>


<p>Tired of typing the password everytime login to the server? Use ssh-copy-id to copy our identity onto the server. First, generate the key pair.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Generating Public and Private Keys&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-keygen -t rsa
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key <span class="o">(</span>/home/upeksha/.ssh/id_rsa<span class="o">)</span>:
</span><span class='line'>Enter passphrase <span class="o">(</span>empty <span class="k">for </span>no passphrase<span class="o">)</span>:
</span><span class='line'>Enter same passphrase again:
</span><span class='line'>Your identification has been saved in /home/upeksha/.ssh/id_rsa
</span><span class='line'>Your public key has been saved in /home/upeksha/.ssh/id_rsa.pub
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Next copy the public key to the server using <code>ssh-copy-id</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>&lsquo;Setting up auto-login for ssh&rsquo; </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-copy-id uwlab
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now you can just type <code>ssh uwlab</code> at the command prompt and you are in the server.</p>

<p>Be sure to use a simple PassPhrase. It is important to use a Very Strong Password and relatively weak and easy to type PassPhrase. This reduces the likelyhood of someone succeed in bruteforcing into the server. Of cource you can hide the SSH for even more security.</p>
]]></content>
  </entry>
  
</feed>
